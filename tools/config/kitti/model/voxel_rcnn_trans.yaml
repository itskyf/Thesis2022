---
_target_: pcdet.models.VoxelRCNN
vfe:
  _target_: pcdet.models.backbones_3d.vfe.MeanVFE
backbone_3d:
  _target_: pcdet.models.backbones_3d.VoxelBackbone8x
  in_channels: ${len:${dataset.pfe.used_feature_list}}
  grid_size: ${get_grid_size:${pc_range},${voxel_size}}
map_to_bev:
  _target_: pcdet.models.backbones_2d.map_to_bev.HeightCompression
backbone_2d:
  _target_: pcdet.models.backbones_2d.BaseBEVBackbone
  in_channels: 256
  layer_nums: [5, 5]
  layer_strides: [1, 2]
  num_filters: [64, 128]
  upsample_strides: [1, 2]
  num_upsample_filters: [128, 128]
dense_head:
  _target_: pcdet.models.dense_heads.AnchorHeadSingle
  in_channels: ${..backbone_2d.in_channels}
  dir_offset: 0.78539
  dir_limit_offset: 0.0
  loss_weights:
    classification: 1.0
    direction: 0.2
    location: 2.0
  num_class: ${len:${class_names}}
  num_dir_bins: 2
  box_coder:
    _target_: pcdet.utils.box_coder_utils.ResidualCoder
  target_assigner_partial:
    _partial_: true
    _target_: pcdet.models.dense_heads.target_assigner.AxisAlignedTargetAssigner
    anchor_cfgs: ${..anchor_cfgs}
    class_names: ${class_names}
    match_height: false
    norm_by_num_examples: false
    pos_fraction: -1.0
    sample_size: 512
  anchor_range: ${pc_range}
  anchor_cfgs:
    - class_name: Car
      anchor_sizes: [[3.9, 1.6, 1.56]]
      anchor_rotations: [0, 1.57]
      anchor_bottom_heights: [-1.78]
      align_center: false
      feature_map_stride: 8
      matched_threshold: 0.6
      unmatched_threshold: 0.45
  use_direction_classifier: true
  predict_boxes_when_training: true
  grid_size: ${model.backbone_3d.grid_size}
  reg_loss:
    _target_: pcdet.utils.loss_utils.WeightedSmoothL1Loss
    code_weights: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
roi_head:
  _target_: pcdet.models.roi_heads.VoxelRCNNHeadTrans
  dp_ratio: 0.3
  num_class: 1
  cls_channels: [256, 256]
  reg_channels: [256, 256]
  pc_range: ${pc_range}
  voxel_size: ${voxel_size}
  nms_train_cfg:
    name: nms_gpu
    multi_classes_nms: false
    pre_maxsize: 9000
    post_maxsize: 512
    threshold: 0.8
    score_thresh: null  # TODO not necessary
  nms_test_cfg:
    nms_type: nms_gpu
    multi_classes_nms: false
    pre_maxsize: 2048
    post_maxsize: 100
    threshold: 0.7
    score_thresh: 0.0
  attention_combine: false
  attention_mask_empty_points: true
  attention_head:
    _target_: pcdet.models.model_utils.TransformerEncoder
    pos_encoder:
      _target_: pcdet.models.model_utils.FeedForwardPositionalEncoding
      d_input: 3
      d_output: 96
    transformer_encoder:
      _target_: torch.nn.TransformerEncoder
      encoder_layer:
        _target_: torch.nn.TransformerEncoderLayer
        d_model: 96
        nhead: 4
        dim_feedforward: 96
      num_layers: 2
  pool_cfgs:
    # TODO: restore 3D backbone dims in code, not in configs
    - name: x_conv2
      method: max_pool
      mlps: [[32, 32, 32]]
      radius: [0.4]
      ranges: [[4, 4, 4]]
      nsample: [16]
    - name: x_conv3
      method: max_pool
      mlps: [[64, 32, 32]]
      ranges: [[4, 4, 4]]
      radius: [0.8]
      nsample: [16]
    - name: x_conv4
      method: max_pool
      mlps: [[64, 32, 32]]
      ranges: [[4, 4, 4]]
      radius: [1.6]
      nsample: [16]
  pool_grid_size: 6
  box_coder:
    _target_: pcdet.utils.box_coder_utils.ResidualCoder
  proposal_target_layer:
    _target_: pcdet.models.roi_heads.target_assigner.ProposalTargetLayer
    cls_score_type: ROI_IOU
    cls_bg_thresh: 0.25
    cls_bg_thresh_lo: 0.1
    cls_fg_thresh: 0.75
    fg_ratio: 0.5
    hard_bg_ratio: 0.8
    reg_fg_thresh: 0.55
    roi_per_image: 128
    sample_roi_by_each_class: true
  corner_loss_regularization: true
  classification_loss_fn:
    _target_: torch.nn.BCELoss
    reduction: none
  reg_loss_fn:
    _target_: pcdet.utils.loss_utils.WeightedSmoothL1Loss
    code_weights: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
  loss_weights:
    rcnn_classification: 1.0
    rcnn_regression: 1.0
    rcnn_corner: 1.0
output_raw_score: false
nms_cfgs:
  name: nms_gpu
  multi_classes_nms: false
  pre_maxsize: 4096
  post_maxsize: 500
  threshold: 0.1
  score_thresh: 0.3
recall_thresholds: [0.3, 0.5, 0.7]
